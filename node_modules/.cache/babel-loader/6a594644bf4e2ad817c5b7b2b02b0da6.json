{"ast":null,"code":"var _jsxFileName = \"/home/lucasgoianamaliciafaculdade/ReactFirst/fiap-social-web-job/src/pages/Feed/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport Post from \"../../components/Post\";\nimport { api } from \"../../services/api\";\nimport { Container, FaButton } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Feed() {\n  _s();\n\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPost, setTotalPost] = useState(0);\n\n  const handleNavigateToNewPost = () => history.push(\"/new-post\");\n\n  const loadPosts = async () => {\n    if (isLoading) return;\n    if (totalPost > 0 && totalPost === posts.length.toString()) return;\n    setIsLoading(true);\n\n    try {\n      const response = await api.get(\"/feed\", {\n        params: {\n          page\n        }\n      });\n      setPosts([...posts, ...response.data]);\n      setPage(page + 1);\n      setTotalPost(response.headers[\"x-total-count\"]);\n    } catch (error) {\n      alert(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadPosts();\n  }, []);\n\n  const scrollObserver = e => {\n    const {\n      scrollTop,\n      clientHeight,\n      scrollHeight\n    } = e.target;\n\n    if (scrollTop + clientHeight > scrollHeight - 100) {\n      loadPosts();\n    }\n  }; // if (isLoading) return <div>Carregando...</div>\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onScroll: scrollObserver,\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      data: post\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 32\n    }, this)), /*#__PURE__*/_jsxDEV(FaButton, {\n      onClick: handleNavigateToNewPost,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Feed, \"3W/Au0w3491kr4jysw7qU2BQTxQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Feed;\nexport default Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/home/lucasgoianamaliciafaculdade/ReactFirst/fiap-social-web-job/src/pages/Feed/index.js"],"names":["useEffect","useState","useHistory","Header","Post","api","Container","FaButton","Feed","history","isLoading","setIsLoading","posts","setPosts","page","setPage","totalPost","setTotalPost","handleNavigateToNewPost","push","loadPosts","length","toString","response","get","params","data","headers","error","alert","scrollObserver","e","scrollTop","clientHeight","scrollHeight","target","map","post"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,SAASC,GAAT,QAAoB,oBAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,UAApC;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEZ,QAAMC,OAAO,GAAGP,UAAU,EAA1B;AAEA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AAEA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,CAAD,CAAhC;AAEA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;;AAEA,QAAMiB,uBAAuB,GAAG,MAAMT,OAAO,CAACU,IAAR,CAAa,WAAb,CAAtC;;AAEA,QAAMC,SAAS,GAAG,YAAY;AAC1B,QAAGV,SAAH,EAAc;AAEd,QAAGM,SAAS,GAAG,CAAZ,IAAiBA,SAAS,KAAKJ,KAAK,CAACS,MAAN,CAAaC,QAAb,EAAlC,EAA2D;AAE3DX,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACA,YAAMY,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,GAAJ,CAAQ,OAAR,EAAiB;AACpCC,QAAAA,MAAM,EAAE;AAAEX,UAAAA;AAAF;AAD4B,OAAjB,CAAvB;AAIAD,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW,GAAGW,QAAQ,CAACG,IAAvB,CAAD,CAAR;AAEAX,MAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AAEAG,MAAAA,YAAY,CAACM,QAAQ,CAACI,OAAT,CAAiB,eAAjB,CAAD,CAAZ;AACH,KAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACH,KAZD,SAYU;AACNjB,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AACJ,GArBD;;AAuBAX,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMU,cAAc,GAAIC,CAAD,IAAO;AAC1B,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA,YAAb;AAA2BC,MAAAA;AAA3B,QAA4CH,CAAC,CAACI,MAApD;;AAEA,QAAIH,SAAS,GAAGC,YAAZ,GAA2BC,YAAY,GAAG,GAA9C,EAAmD;AAC/Cd,MAAAA,SAAS;AACZ;AACJ,GAND,CAzCY,CAiDZ;;;AAEA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAEU,cAArB;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKlB,KAAK,CAACwB,GAAN,CAAUC,IAAI,iBAAI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ;AAAA;AAAA;AAAA;AAAA,YAAlB,CAFL,eAGI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEnB,uBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA1DQV,I;UAEWN,U;;;KAFXM,I;AA4DT,eAAeA,IAAf","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport Post from \"../../components/Post\";\nimport { api } from \"../../services/api\";\nimport { Container, FaButton } from \"./styles\";\n\nfunction Feed() {\n\n    const history = useHistory();\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const [posts, setPosts] = useState([]);\n\n    const [page, setPage] = useState(1);\n\n    const [totalPost, setTotalPost] = useState(0);\n\n    const handleNavigateToNewPost = () => history.push(\"/new-post\");\n\n    const loadPosts = async () => {\n        if(isLoading) return;\n\n        if(totalPost > 0 && totalPost === posts.length.toString()) return;\n\n        setIsLoading(true);\n        try {\n            const response = await api.get(\"/feed\", {\n                params: { page }\n            });\n\n            setPosts([...posts, ...response.data]);\n\n            setPage(page + 1);\n\n            setTotalPost(response.headers[\"x-total-count\"]);\n        } catch (error) {\n            alert(error);\n        } finally {\n            setIsLoading(false);\n        }\n    }\n\n    useEffect(() => {\n        loadPosts();\n    }, []);\n\n    const scrollObserver = (e) => {\n        const { scrollTop, clientHeight, scrollHeight } = e.target;\n\n        if (scrollTop + clientHeight > scrollHeight - 100) {\n            loadPosts();\n        }\n    }\n\n    // if (isLoading) return <div>Carregando...</div>\n\n    return (\n        <Container onScroll={scrollObserver}>\n            <Header />\n            {posts.map(post => <Post data={post} />)}\n            <FaButton onClick={handleNavigateToNewPost}>+</FaButton>\n        </Container>\n    );\n}\n\nexport default Feed;"]},"metadata":{},"sourceType":"module"}