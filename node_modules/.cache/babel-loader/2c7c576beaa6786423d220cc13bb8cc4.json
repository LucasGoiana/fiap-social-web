{"ast":null,"code":"var _jsxFileName = \"/home/lucasgoianamaliciafaculdade/ReactFirst/fiap-social-web/src/pages/NewImage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport Input from \"../../components/Input\";\nimport Select from \"../../components/Select\";\nimport Tag from \"../../components/Tag\";\nimport { api } from \"../../services/api\";\nimport { Container, FormNewPost } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewImage() {\n  _s();\n\n  const history = useHistory();\n  const [categories, setCategories] = useState([]);\n  const [categoriesSel, setCategoriesSel] = useState([]);\n  const [newPost, setNewPost] = useState({\n    title: \"\",\n    description: \"\",\n    gist: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleInput = e => {\n    setNewPost({ ...newPost,\n      [e.target.id]: e.target.value\n    });\n  };\n\n  useEffect(() => {\n    const loadCategories = async () => {\n      try {\n        const response = await api.get(\"/categories\");\n        setCategories(response.data);\n      } catch (error) {\n        console.error(error);\n        alert(\"Ops, erro ao buscar as categorias\");\n      }\n    };\n\n    loadCategories();\n  }, []);\n  const imageRef = useRef();\n  const [image, setImage] = useState(null);\n\n  const handleImage = e => {\n    if (e.target.files[0]) {\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\n      imageRef.current.style.display = \"flex\";\n    } else {\n      imageRef.current.src = \"\";\n      imageRef.current.style.display = \"none\";\n    }\n\n    setImage(e.target.files[0]);\n  };\n\n  const handleCategories = e => {\n    const categorySelId = e.target.value;\n    if (categoriesSel.find(c => c.id.toString() === categorySelId)) return e.target.value = \"\";\n    const categorySel = categories.find(category => category.id.toString() === categorySelId);\n    setCategoriesSel([...categoriesSel, categorySel]);\n    e.target.value = \"\";\n  };\n\n  const handleUnselCategory = idUnsel => {\n    const categoriesAux = categoriesSel.filter(category => category.id !== idUnsel);\n    setCategoriesSel(categoriesAux);\n  };\n\n  const handleSubmit = async e => {\n    console.log(\"sim\");\n    e.preventDefault();\n    if (categoriesSel.length === 0) return alert(\"Selecione ao menos uma categoria\");\n    const data = new FormData();\n    data.append(\"title\", newPost.title);\n    data.append(\"description\", newPost.description);\n    let categoriesIds = categoriesSel.map(c => c.id).join();\n    data.append(\"categories\", categoriesIds);\n    newPost.gist && data.append(\"gist\", newPost.gist);\n    image && data.append(\"image\", image);\n    setIsLoading(true);\n\n    try {\n      await api.post(\"/questions\", data, {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      });\n      history.goBack();\n    } catch (error) {\n      console.error(error);\n      alert(error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormNewPost, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nova Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Pr\\xE9-visualiza\\xE7\\xE3o\",\n        ref: imageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewImage, \"r++BxROu1c7KxaXJZ2p9813Nl2c=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewImage;\nexport default NewImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewImage\");","map":{"version":3,"sources":["/home/lucasgoianamaliciafaculdade/ReactFirst/fiap-social-web/src/pages/NewImage/index.js"],"names":["useEffect","useRef","useState","useHistory","Header","Input","Select","Tag","api","Container","FormNewPost","NewImage","history","categories","setCategories","categoriesSel","setCategoriesSel","newPost","setNewPost","title","description","gist","isLoading","setIsLoading","handleInput","e","target","id","value","loadCategories","response","get","data","error","console","alert","imageRef","image","setImage","handleImage","files","current","src","URL","createObjectURL","style","display","handleCategories","categorySelId","find","c","toString","categorySel","category","handleUnselCategory","idUnsel","categoriesAux","filter","handleSubmit","log","preventDefault","length","FormData","append","categoriesIds","map","join","post","headers","goBack"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport Input from \"../../components/Input\";\nimport Select from \"../../components/Select\";\nimport Tag from \"../../components/Tag\";\nimport { api } from \"../../services/api\";\nimport {Container, FormNewPost} from \"./style\";\nfunction NewImage() {\n    const history = useHistory();\n\n    const [categories, setCategories] = useState([]);\n    const [categoriesSel, setCategoriesSel] = useState([]);\n\n    const [newPost, setNewPost] = useState({\n        title: \"\",\n        description: \"\",\n        gist: \"\"\n    });\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleInput = (e) => {\n        setNewPost({ ...newPost, [e.target.id]: e.target.value });\n    }\n\n    useEffect(() => {\n        const loadCategories = async () => {\n            try {\n                const response = await api.get(\"/categories\");\n\n                setCategories(response.data);\n            } catch (error) {\n                console.error(error);\n                alert(\"Ops, erro ao buscar as categorias\");\n            }\n        }\n\n        loadCategories();\n    }, []);\n\n    const imageRef = useRef();\n    const [image, setImage] = useState(null);\n\n    const handleImage = (e) => {\n        if (e.target.files[0]) {\n            imageRef.current.src = URL.createObjectURL(e.target.files[0]);\n            imageRef.current.style.display = \"flex\";\n        } else {\n            imageRef.current.src = \"\";\n            imageRef.current.style.display = \"none\";\n        }\n\n        setImage(e.target.files[0]);\n    };\n\n    const handleCategories = (e) => {\n        const categorySelId = e.target.value;\n\n        if (categoriesSel.find(c => c.id.toString() === categorySelId))\n            return e.target.value = \"\";\n\n        const categorySel = categories.find(\n            category => category.id.toString() === categorySelId\n        )\n\n        setCategoriesSel([...categoriesSel, categorySel]);\n\n        e.target.value = \"\";\n    }\n\n    const handleUnselCategory = (idUnsel) => {\n        const categoriesAux = categoriesSel.filter(\n            category => category.id !== idUnsel\n        );\n\n        setCategoriesSel(categoriesAux);\n    }\n\n    const handleSubmit = async (e) => {\n\n        console.log(\"sim\")\n        e.preventDefault();\n\n        if (categoriesSel.length === 0)\n            return alert(\"Selecione ao menos uma categoria\");\n\n        const data = new FormData();\n\n        data.append(\"title\", newPost.title);\n        data.append(\"description\", newPost.description);\n\n        let categoriesIds = categoriesSel.map(c => c.id).join();\n\n        data.append(\"categories\", categoriesIds);\n\n        newPost.gist && data.append(\"gist\", newPost.gist);\n\n        image && data.append(\"image\", image);\n\n        setIsLoading(true);\n\n        try {\n            await api.post(\"/questions\", data, {\n                headers: {\n                    \"Content-type\": \"multipart/form-data\"\n                }\n            });\n\n            history.goBack();\n        } catch (error) {\n            console.error(error);\n            alert(error);\n        } finally{\n            setIsLoading(false);\n        }\n    }\n\n    if(isLoading)\n        return <div>Carregando...</div>\n\n    return (\n        <Container>\n            <Header />\n            <FormNewPost onSubmit={handleSubmit}>\n                <h1>Nova Imagem</h1>\n\n                <input type=\"file\" accept=\"image/*\" onChange={handleImage} />\n                <img alt=\"Pré-visualização\" ref={imageRef} />\n                <button>Enviar</button>\n            </FormNewPost>\n        </Container>\n    );\n}\n\nexport default NewImage;"]},"metadata":{},"sourceType":"module"}