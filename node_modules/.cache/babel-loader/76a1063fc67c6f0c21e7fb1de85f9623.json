{"ast":null,"code":"var _jsxFileName = \"/home/lucasgoianamaliciafaculdade/ReactFirst/fiap-social-web/src/pages/NewImage/index.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport { getUser } from \"../../services/security\";\nimport { api } from \"../../services/api\";\nimport { Container, FormNewPost } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NewImage() {\n  _s();\n\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const imageRef = useRef();\n  const [image, setImage] = useState(null);\n\n  const handleImage = e => {\n    if (e.target.files[0] && img.onload) {\n      imageRef.current.src = URL.createObjectURL(e.target.files[0]);\n      imageRef.current.style.display = \"flex\";\n    } else {\n      imageRef.current.src = \"\";\n      imageRef.current.style.display = \"none\";\n    }\n\n    console.log(img);\n  };\n\n  const handleSubmit = async e => {\n    console.log(\"sim\");\n    e.preventDefault();\n    const data = new FormData();\n    image && data.append(\"image\", image);\n    setIsLoading(true);\n    const Student = getUser();\n\n    try {\n      await api.post(\"/students/\" + Student.studentId + \"/images\", data, {\n        headers: {\n          \"Content-type\": \"multipart/form-data\"\n        }\n      });\n      alert('Imagem atualizada com sucesso!'); // history.goBack();\n    } catch (error) {\n      console.error(error);\n      alert(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }; // if(isLoading)\n  //     return <div>Carregando...</div>\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormNewPost, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Nova Imagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"Pr\\xE9-visualiza\\xE7\\xE3o\",\n        ref: imageRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Enviar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewImage, \"FVhYXakwm9GnhCJccKKroUgL/Mo=\", false, function () {\n  return [useHistory];\n});\n\n_c = NewImage;\nexport default NewImage;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewImage\");","map":{"version":3,"sources":["/home/lucasgoianamaliciafaculdade/ReactFirst/fiap-social-web/src/pages/NewImage/index.js"],"names":["useEffect","useRef","useState","useHistory","Header","getUser","api","Container","FormNewPost","NewImage","history","isLoading","setIsLoading","imageRef","image","setImage","handleImage","e","target","files","img","onload","current","src","URL","createObjectURL","style","display","console","log","handleSubmit","preventDefault","data","FormData","append","Student","post","studentId","headers","alert","error"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport { getUser } from \"../../services/security\";\nimport { api } from \"../../services/api\";\nimport {Container, FormNewPost} from \"./style\";\nfunction NewImage() {\n    const history = useHistory();\n\n\n    const [isLoading, setIsLoading] = useState(false);\n\n    const imageRef = useRef();\n    const [image, setImage] = useState(null);\n\n    const handleImage = (e) => {\n     \n\n        if (e.target.files[0] && img.onload ) {\n            imageRef.current.src = URL.createObjectURL(e.target.files[0]);\n            imageRef.current.style.display = \"flex\";\n        } else {\n            imageRef.current.src = \"\";\n            imageRef.current.style.display = \"none\";\n        }\n        console.log(img);\n\n    };\n\n    const handleSubmit = async (e) => {\n\n        console.log(\"sim\")\n        e.preventDefault();\n\n        const data = new FormData();\n\n\n        image && data.append(\"image\", image);\n        setIsLoading(true);\n        const Student = getUser();\n        try {\n            await api.post(\"/students/\"+Student.studentId+\"/images\", data, {\n                headers: {\n                    \"Content-type\": \"multipart/form-data\"\n                }\n            });\n            alert('Imagem atualizada com sucesso!');\n\n           // history.goBack();\n        } catch (error) {\n            console.error(error);\n            alert(error);\n        } finally{\n            setIsLoading(false);\n        }\n    }\n\n    // if(isLoading)\n    //     return <div>Carregando...</div>\n\n    return (\n        <Container>\n            <Header />\n            <FormNewPost onSubmit={handleSubmit}>\n                <h1>Nova Imagem</h1>\n\n                <input type=\"file\" accept=\"image/*\" onChange={handleImage} />\n                <img alt=\"Pré-visualização\" ref={imageRef} />\n                <button>Enviar</button>\n            </FormNewPost>\n        </Container>\n    );\n}\n\nexport default NewImage;"]},"metadata":{},"sourceType":"module"}